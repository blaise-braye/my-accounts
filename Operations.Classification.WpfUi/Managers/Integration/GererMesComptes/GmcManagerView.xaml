<UserControl x:Class="Operations.Classification.WpfUi.Managers.Integration.GererMesComptes.GmcManagerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:controls="clr-namespace:Operations.Classification.WpfUi.Technical.Controls"
             xmlns:gmc="clr-namespace:Operations.Classification.WpfUi.Managers.Integration.GererMesComptes"
             mc:Ignorable="d"
             d:DataContext="{Binding Source={StaticResource Locator}, Path=Main.GmcManager}"
             d:DesignHeight="357.203" d:DesignWidth="750">
    <DockPanel>
        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
            <Button Padding="12" Style="{DynamicResource MetroCircleButtonStyle}"
                    Command="{Binding RefreshRemoteKnowledgeCommand}">
                <Rectangle Width="24" Height="24">
                    <Rectangle.Fill>
                        <VisualBrush Visual="{StaticResource appbar_refresh}" Stretch="Fill" />
                    </Rectangle.Fill>
                </Rectangle>
            </Button>
            <Button Padding="12" Style="{DynamicResource MetroCircleButtonStyle}"
                    ToolTip="Pull categories from Gmc"
                    Command="{Binding PullCategoriesFromGmcCommand}">
                <Rectangle Width="24" Height="24">
                    <Rectangle.Fill>
                        <VisualBrush Visual="{StaticResource appbar_cloud_download}" Stretch="Fill" />
                    </Rectangle.Fill>
                </Rectangle>
            </Button>
            <Button Padding="12" Style="{DynamicResource MetroCircleButtonStyle}"
                    ToolTip="Push new operations from Gmc"
                    Command="{Binding PushChangesToGmcCommand}">
                <Rectangle Width="24" Height="24">
                    <Rectangle.Fill>
                        <VisualBrush Visual="{StaticResource appbar_cloud_upload}" Stretch="Fill" />
                    </Rectangle.Fill>
                </Rectangle>
            </Button>
            <Button Padding="12" Style="{DynamicResource MetroCircleButtonStyle}"
                    Command="{Binding ClearCurrentAccountCacheAndResetCommand}">
                <Rectangle Width="24" Height="24">
                    <Rectangle.Fill>
                        <VisualBrush Visual="{StaticResource appbar_clear_reflect_horizontal}" Stretch="Fill" />
                    </Rectangle.Fill>
                </Rectangle>
            </Button>
            <ToggleButton Padding="12" Style="{DynamicResource MetroCircleToggleButtonStyle}"
                          Click="ShowPopup"
                          x:Name="BtnFilter"
                          IsChecked="{Binding Filter.IsFiltering, Mode=TwoWay}">
                <Rectangle Width="24" Height="24">
                    <Rectangle.Fill>
                        <VisualBrush Visual="{StaticResource appbar_filter}" Stretch="Fill" />
                    </Rectangle.Fill>
                </Rectangle>
            </ToggleButton>
            <Popup x:Name="Popup" PlacementTarget="{Binding ElementName=BtnFilter}"
                   Placement="Top" StaysOpen="False">
                <controls:PopupContent>
                    <gmc:GmcManagerFilterView DataContext="{Binding Path=Filter}"/>
                </controls:PopupContent>
            </Popup>
        </StackPanel>
        <Grid DockPanel.Dock="Top">
            <Grid.Resources>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50*" />
                <ColumnDefinition Width="50*" />
            </Grid.ColumnDefinitions>
            <GroupBox Grid.ColumnSpan="2"
                      Visibility="{Binding IsDeltaAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"
                      Header="Delta to apply on remote state">
                <StackPanel>
                    <TextBlock
                        Text="{Binding TransactionDelta.LastDeltaDate, StringFormat='computed time : {0}'}" />
                    <TextBlock Text="{Binding TransactionDelta.NewCount, StringFormat='{}{0} operations to add'}" />
                    <TextBlock Text="{Binding TransactionDelta.DeleteCount, StringFormat='{}{0} operations to delete'}" />
                    <TextBlock
                        Text="{Binding TransactionDelta.UpdateMemoCount, StringFormat='{}{0} operations to update'}" />
                    <TextBlock
                        Text="{Binding TransactionDelta.NothingCount, StringFormat='{}{0} operations up to date'}" />
                </StackPanel>
            </GroupBox>
            <GroupBox Grid.Row="1" Grid.Column="0" Header="local situation">
                <DataGrid ItemsSource="{Binding LocalTransactions}" AutoGenerateColumns="True">
                    <i:Interaction.Behaviors>
                        <controls:CustomizeAutoGeneratedColumnsBehavior />
                        <controls:SetupDataGridContextMenuBehavior />
                    </i:Interaction.Behaviors>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem
                                Command="{Binding Filter.FilterOnItemDateCommand}"
                                Header="Show all operation on selected item date" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </GroupBox>
            <GroupBox Grid.Row="1" Grid.Column="1" Header="Remote situation">
                <DataGrid ItemsSource="{Binding RemoteTransactions}" AutoGenerateColumns="True">
                    <i:Interaction.Behaviors>
                        <controls:CustomizeAutoGeneratedColumnsBehavior />
                        <controls:SetupDataGridContextMenuBehavior />
                    </i:Interaction.Behaviors>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem
                                Command="{Binding Filter.FilterOnItemDateCommand}"
                                Header="Show all operation on selected item date" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </GroupBox>
        </Grid>
    </DockPanel>
</UserControl>